name: Build Container Image

on:
  pull_request:
    branches: [ main ]

  workflow_call:
    inputs:
      tagTypes:
        required: false
        type: string
        default: |
          type=sha

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.meta.outputs.json }}
    steps:
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}
          # when opened on pull request, no inputs are provided. when empty the
          # defaults are used which produces pr-* as the tag to the image using
          # the below information.
          #   type=schedule,pattern=nightly,enable=true,priority=1000
          #   type=ref,event=branch,enable=true,priority=600
          #   type=ref,event=tag,enable=true,priority=600
          #   type=ref,event=pr,prefix=pr-,enable=true,priority=600
          tags: |
            ${{ inputs.tagTypes }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.3.1
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  scan:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJSON(needs.build.outputs.matrix).tags }}
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.version }}
#          exit-code: '1'
#          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
        env:
          TRIVY_USERNAME: trivy
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: 'trivy-results'
          path: 'trivy-results.sarif'

      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Snapshots
        uses: aquasecurity/trivy-action@master
        with:
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: ${{ matrix.version }}
          github-pat: ${{ secrets.GITHUB_TOKEN }}
        env:
          TRIVY_USERNAME: trivy
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
          name: 'trivy-sbom'
          path: 'dependency-results.sbom.json'

#      This can't be setup until we enable GHAS
#      - name: Upload Trivy scan results to GitHub Security tab
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: 'trivy-results.sarif'


